Box Video Poker - Head Slappers and Outtakes

It's 2:00 am and you only have 8 more hours before demo time and your stupid SVG files are not displaying. This I think, is typical of hackathon projects and kind of a microcosm of the regular software development process. Do you continue to work on what might be a dead end, simplify, or change direction?

I really wanted to use some pretty SVG graphics for the cards, but failing that I had a deck of PNG files. If I put a PNG image on the card button it worked fine, but when I put the SVG image on the card I got a tiny postage stamp of static displaying.

There were a number of code snippets for displaying SVG in Qt, all written for older versions of the library and some were horribly complex. It looked like Qt 5 should be able to handle SVG as easily as PNG. I tried a different card from the regular card back, the ace of spades, and it displayed! It was a tiny postage stamp size, but it showed up. I fiddled with all sorts of options in Qt for sizing, but still I was never getting anything sizing to the widget. When I opened the cards up in IE they displayed fine although I had to scroll the page to see each one. Maybe something is up with the SVG files themselves? I opened up one of the cards in InkScape, a free SVG editor to see if there was some sort of "resize me to a postage stamp" setting in the SVG file. Aha! Each card was drawn centered in a page. Resizing the bounding box to fit the content fixed my postal problem. I was sizing correctly in Qt, just my images had a lot of unused whitespace around them. Final mystery is the card back SVG that I had started with. It was clear in InkScape that the card back was drawn using repeated patterns. Removing the pattern allowed the card to display. Now I noticed a message in the Qt debug window that happened with the original card backs: object not found. There must be something about the card backs that Qt didn't like, but InkScape and IE had no trouble with. I dropped a Box logo into the now blank card backs and presto! Box branded cards. I should have started with that in the first place.

The QUrl and QUrlQuery quandary. I tried to use QUrl and QUrlQuery to build my strings, but in a couple places I couldn't get the right encoding to come back and, well, I just used string operators. For example in OAuth2::loginUrl you can see a "?" right in a string literal. Other strings I had to encode first, even though it appeared I could encode them later. But I got decoded or "friendly" strings even when I asked Qt to give me somthing "fully encoded." So, the solution was to encode first so the "friendly" version was encoded.

Where do the frickin parameters go? Maybe I'm lame, but from the curl examples on Box I always got it wrong and didn't notice something. For example, to get a file from Box you put the file ID in the query string. The authorization bearer code and etag go in the request header. The login parameters go in the body of the request. Perhaps the trickiest of all is the routine to upload over an existing file. It uses all three methods to pass parameters and the parameters in the body have to be in multi-part blocks. Parsing the returned data was easy, but I just assumed I get a lot of errors back before I managed to get the format right on sending the request.

Signals and Slots, oh my! Qt has a concept of signals and slots to provide a pubsub notification system. You can even make your own signals and hook slots to them. Well, I tried to hook up BoxOAuth2 to the QWebView::UrlChanged signal, or resignal from within the login dialog, but I never got called. Well, it's just 1:1 communication, so I reverted to just a plain C++ call.

Aren't I supposed to get redirected, part 1. With OAuth2 the code is served back to you by redirecting the browser to a dummy URL with the code in the query. Yet, I was not getting any URLChanged signal from Qt. The mystery was resolved when I changed my URL root from some dummy value to http://google.com. I'm not going to visit the URL, but apparently, the QWebView needs a valid root URL before you get a change notification. Also interesting was I got an email from Google asking if someone was trying to hack my gmail account, since their server didn't understand the ?code= query and my gmail account was logged in. Nice touch Google!

Aren't I supposed to get redirected again? The first time I processed a download I was surprised to see that it finished with no errors, but there was no content. This was new. Normally all my attempts are met with error after error until I get the format right. This time, it was just luck that I overheard someone mention redirection. With a little exploration I found the redirect attribute. I figured it would have been some kind of error code since the results aren't there. If I had received "error - redirected" I would have prompted found the redirect attribute mentioned in discussions of that error, but on success how are you supposed to know what the next step is?

Invisible animation and silent sound. I don't know if anyone gets these right without a lot of attempts and tuning. My evidence is the bizarre animations that show up on video game attact screens. "Hey! look what happened when we accidentally XOR'ed the sprites." Unfortunately, for me I didn't something cool, I got invisible things flying across the screen. One of the dumbest mistakes was mispelling "ukulele" when referencing an object. The result was no error, but no ukulele either. I even own a ukulele, I should be able to spell it! Discovering the media player cannot use resources was another one of those "no sound, no error" moments. I also wanted to fade out the celebration image at the start of the next hand, but the simplest widget to hold an image doesn't have an opacity property. I'd have to create another widget and place the label inside it, then hopefully when I change the parent widget opacity it would affect the child's. Or, I could just animate the image offscreen again and be done. I chose the latter.

What about a leaderboard? The layout of the table leaves room for a leaderboard, which I never had time to complete. In the end I just cut the feature. Likewise in-game chat would be fun to have. Those features will have to wait for the next version. Along with them, I could add push notifications from Box. That way, even when idle you could see the leaderboard and jackpots changing.